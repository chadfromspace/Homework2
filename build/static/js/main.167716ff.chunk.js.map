{"version":3,"sources":["assets/img/aboutme.png","components/About/index.js","components/Project/index.js","components/Projects/index.js","components/Contact/index.js","components/Navbar/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","state","className","alt","src","aboutme","Component","Project","Card","key","this","props","id","Header","name","Body","description","img","Text","href","deployedURL","Button","variant","repositoryURL","Projects","projects","db","map","a","index","Contact","Navbar","to","Footer","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,qC,i0BCmB5BC,E,4MAdbC,MAAQ,G,uDAGN,OACE,yBAAKC,UAAU,WACb,gCACA,yBAAKA,UAAU,UAAUC,IAAI,0BAA0BC,IAAKC,MAAU,6BAAS,6BAC/E,4H,GARYC,a,8BC6BLC,E,4MA3BbN,MAAQ,G,uDAGN,OACE,yBAAKC,UAAU,eACb,yBAAKA,UAAU,cACX,kBAACM,EAAA,EAAD,CAAMN,UAAU,0BAA0BO,IAAKC,KAAKC,MAAMC,IACxD,kBAACJ,EAAA,EAAKK,OAAN,KAAcH,KAAKC,MAAMG,MACzB,kBAACN,EAAA,EAAKO,KAAN,KACK,yBAAKZ,IAAKO,KAAKC,MAAMK,YAAaZ,IAAKM,KAAKC,MAAMM,MAClD,kBAACT,EAAA,EAAKU,KAAN,KACMR,KAAKC,MAAMK,aAEjB,uBAAGG,KAAMT,KAAKC,MAAMS,aACf,kBAACC,EAAA,EAAD,CAAQnB,UAAU,OAAOoB,QAAQ,WAAjC,YAEL,uBAAGH,KAAMT,KAAKC,MAAMY,eACf,kBAACF,EAAA,EAAD,CAAQC,QAAQ,WAAhB,8B,GAlBFhB,a,QCqBPkB,E,4MApBbvB,MAAQ,CACPwB,SAAUC,G,uDAIT,OACE,6BACGhB,KAAKT,MAAMwB,SAASE,KAAI,SAACC,EAAEC,GAAH,OACrB,kBAAC,EAAD,CAASpB,IAAKoB,EACVf,KAAMc,EAAEd,KACRE,YAAaY,EAAEZ,YACfI,YAAaQ,EAAER,YACfG,cAAeK,EAAEL,cACjBN,IAAKW,EAAEX,c,GAdAX,aCaRwB,G,kNAdb7B,MAAQ,G,uDAGN,OACE,6BACE,qEACA,6BACA,2BAAG,uBAAGkB,KAAK,qDAAR,YAAwE,8BAC3E,2BAAG,uBAAGA,KAAK,4BAAR,gB,GATWb,c,gBCuBPyB,E,4MArBb9B,MAAQ,G,uDAGN,OACE,6BACI,yBAAKC,UAAU,gBACX,wBAAIA,UAAU,QACZ,kBAAC,IAAD,CAAM8B,GAAG,KAAT,UAEF,wBAAI9B,UAAU,QACZ,kBAAC,IAAD,CAAM8B,GAAG,aAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,kB,GAdK1B,aCcN2B,G,kNAdbhC,MAAQ,G,uDAGN,OACE,6BACE,kFAEI,uBAAGkB,KAAK,wDAAR,yBAFJ,gD,GANab,c,OC0BN4B,MAhBf,WACE,OACE,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,yBAAKhC,UAAU,QACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiC,KAAK,YAAYC,UAAWZ,IACnC,kBAAC,IAAD,CAAOW,KAAK,WAAWC,UAAWN,IAClC,kBAAC,IAAD,CAAOK,KAAK,KAAKC,UAAWpC,MAGlC,kBAAC,EAAD,QCZYqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.167716ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aboutme.b3438e84.png\";","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport aboutme from \"../../assets/img/aboutme.png\";\n\nclass About extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"aboutMe\">\n        <figure>\n        <img className=\"aboutMe\" alt=\"A person in blue light.\" src={aboutme}/><br></br><br></br>\n        <h5>I'm a Full Stack Web Developer, Graphic Designer, and Game Developer from Atlanta, GA.</h5>\n        </figure>\n      </div>\n    );\n  }\n}\n\nexport default About;","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nclass Project extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"row content\">\n        <div className=\"col-6 mt-4\">\n            <Card className=\"text-center projectCard\" key={this.props.id}>\n              <Card.Header>{this.props.name}</Card.Header>\n              <Card.Body>\n                   <img alt={this.props.description} src={this.props.img}/>\n                   <Card.Text>\n                        {this.props.description}\n                   </Card.Text>\n                   <a href={this.props.deployedURL}>\n                        <Button className=\"mr-2\" variant=\"primary\">Website</Button>\n                   </a>\n                   <a href={this.props.repositoryURL}>\n                        <Button variant=\"primary\">Github Repository</Button>\n                   </a>\n              </Card.Body>\n            </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Project;","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Project from \"../Project\";\nimport db from \"./db.json\";\n\nclass Projects extends Component {\n  state = {\n   projects: db\n   };\n\n  render() {\n    return (\n      <div>\n        {this.state.projects.map((a,index)=>(\n            <Project key={index}\n                name={a.name}\n                description={a.description}\n                deployedURL={a.deployedURL}\n                repositoryURL={a.repositoryURL}\n                img={a.img}/>\n         ))}\n      </div>\n    );\n  }\n}\n\nexport default Projects;","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Contact extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <p>I prefer to be contacted via LinkedIn.</p>\n        <br></br>\n        <p><a href=\"https://www.linkedin.com/in/chad-dubay-a17a501aa/\">LinkedIn</a><br></br></p>\n        <p><a href=\"chadfromspace.github.com\">GitHub</a></p>\n      </div>\n    );\n  }\n}\n\nexport default Contact;","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div>\n          <nav className=\"navbar links\">\n              <h4 className=\"mr-4\">\n                <Link to=\"/\">About</Link>\n              </h4>\n              <h4 className=\"mr-4\">\n                <Link to=\"/projects\">Projects</Link>\n              </h4>\n              <h4>\n                <Link to=\"/contact\">Contact</Link>\n              </h4>\n          </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Footer extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <footer>\n            Created with React. Be sure to check out my&nbsp;\n            <a href=\"https://chadfromspace.github.io/InteractivePortfolio\">Interactive Portfolio</a>&nbsp;that was create using Unity and C#.\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport About from \"./components/About\";\nimport Projects from \"./components/Projects\";\nimport Contact from \"./components/Contact\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport {\nBrowserRouter as Router,\nSwitch,\nRoute\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n        <Navbar />\n        <div className=\"page\">\n            <Switch>\n              <Route path=\"/projects\" component={Projects}/>\n              <Route path=\"/contact\" component={Contact}/>\n              <Route path=\"/*\" component={About}/>\n            </Switch>\n        </div>\n        <Footer />\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}