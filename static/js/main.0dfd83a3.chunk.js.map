{"version":3,"sources":["assets/img/spacetime.png","assets/img/interactiveportfolio.png","assets/img/game.png","components/Project/index.js","components/Projects/index.js","components/Contact/index.js","components/Navbar/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Project","props","state","className","Card","key","this","id","Header","name","Body","alt","description","src","img","Text","href","deployedURL","Button","variant","linkText","Component","Projects","projects","db","images","spacetime","interactiveportfolio","game","map","a","index","Contact","Navbar","to","Footer","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"myBAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,kD,mBCA3CD,EAAOC,QAAU,IAA0B,kC,6UCkC5BC,E,kDA5BX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,GAFC,E,0CAMpB,WACE,OACE,yBAAKC,UAAU,eACb,yBAAKA,UAAU,mBACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,0BAA0BE,IAAKC,KAAKL,MAAMM,IACxD,kBAACH,EAAA,EAAKI,OAAN,KAAa,4BAAKF,KAAKL,MAAMQ,OAC7B,kBAACL,EAAA,EAAKM,KAAN,KACG,yBAAKC,IAAKL,KAAKL,MAAMW,YAAaC,IAAKP,KAAKL,MAAMa,MAClD,kBAACV,EAAA,EAAKW,KAAN,KACMT,KAAKL,MAAMW,aAEjB,uBAAGI,KAAMV,KAAKL,MAAMgB,aACf,kBAACC,EAAA,EAAD,CAAQf,UAAU,OAAOgB,QAAQ,WAAWb,KAAKL,MAAMmB,mB,GAnBrDC,a,2DCiCPC,E,kDA7BX,WAAYrB,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACLqB,SAAUC,EACVC,OAAQ,CACRC,IACAC,IACAC,MAPM,E,0CAYpB,WAAU,IAAD,OACP,OACE,6BACE,wCACCtB,KAAKJ,MAAMqB,SAASM,KAAI,SAACC,EAAEC,GAAH,OACvB,kBAAC,EAAD,CAAS1B,IAAK0B,EACdtB,KAAMqB,EAAErB,KACRG,YAAakB,EAAElB,YACfK,YAAaa,EAAEb,YACfG,SAAUU,EAAEV,SACZN,IAAK,EAAKZ,MAAMuB,OAAOM,a,GAvBVV,aCORW,G,kKAVb,WACE,OACE,6BACE,6BACA,2BAAG,uBAAGhB,KAAK,qDAAR,YAAwE,mC,GAN7DK,c,gBCmBPY,E,4JAhBb,WACE,OACE,6BACI,yBAAK9B,UAAU,gBACX,wBAAIA,UAAU,QACZ,kBAAC,IAAD,CAAM+B,GAAG,aAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,kB,GAVKb,aCYNc,G,kKAXb,WACE,OACE,6BACE,sC,GALad,c,OCwBNe,MAff,WACE,OACE,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,yBAAKjC,UAAU,QACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkC,KAAK,WAAWC,UAAWN,IAClC,kBAAC,IAAD,CAAOK,KAAK,KAAKC,UAAWhB,MAGlC,kBAAC,EAAD,QCVYiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0dfd83a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spacetime.80290cc6.png\";","module.exports = __webpack_public_path__ + \"static/media/interactiveportfolio.75bc1d1a.png\";","module.exports = __webpack_public_path__ + \"static/media/game.7729fad2.png\";","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nclass Project extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        }\n    };\n\n  render() {\n    return (\n      <div className=\"row content\">\n        <div className=\"col-6 mt-2 mb-2\">\n          <Card className=\"text-center projectCard\" key={this.props.id}>\n            <Card.Header><h3>{this.props.name}</h3></Card.Header>\n            <Card.Body>\n               <img alt={this.props.description} src={this.props.img}></img>\n               <Card.Text>\n                    {this.props.description}\n               </Card.Text>\n               <a href={this.props.deployedURL}>\n                    <Button className=\"mr-2\" variant=\"primary\">{this.props.linkText}</Button>\n               </a>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Project;","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Project from \"../Project\";\nimport db from \"./db.json\";\nimport spacetime from \"../../assets/img/spacetime.png\";\nimport interactiveportfolio from \"../../assets/img/interactiveportfolio.png\";\nimport game from \"../../assets/img/game.png\";\n\nclass Projects extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n                projects: db,\n                images: [\n                spacetime,\n                interactiveportfolio,\n                game\n                ]\n        };\n    }\n\n  render() {\n    return (\n      <div>\n        <h1>Projects</h1>\n        {this.state.projects.map((a,index)=>(\n          <Project key={index}\n          name={a.name}\n          description={a.description}\n          deployedURL={a.deployedURL}\n          linkText={a.linkText}\n          img={this.state.images[index]}/>\n         ))}\n      </div>\n    );\n  }\n}\n\nexport default Projects;","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Contact extends Component {\n\n  render() {\n    return (\n      <div>\n        <br></br>\n        <p><a href=\"https://www.linkedin.com/in/chad-dubay-a17a501aa/\">LinkedIn</a><br></br></p>\n      </div>\n    );\n  }\n}\n\nexport default Contact;","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <div>\n          <nav className=\"navbar links\">\n              <h4 className=\"mr-4\">\n                <Link to=\"/projects\">Projects</Link>\n              </h4>\n              <h4>\n                <Link to=\"/contact\">Contact</Link>\n              </h4>\n          </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Footer extends Component {\n\n  render() {\n    return (\n      <div>\n        <footer>\n\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Projects from \"./components/Projects\";\nimport Contact from \"./components/Contact\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport {\nBrowserRouter as Router,\nSwitch,\nRoute\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n        <Navbar />\n        <div className=\"page\">\n            <Switch>\n              <Route path=\"/contact\" component={Contact}/>\n              <Route path=\"/*\" component={Projects}/>\n            </Switch>\n        </div>\n        <Footer />\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}